"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PodLogs:
    """
    PodLogs defines how to collect logs for a pod.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.grafana.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PodLogs", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGrafanaComV1alpha1PodLogsSpec, default is Undefined, optional
        spec
    """


    apiVersion: "monitoring.grafana.com/v1alpha1" = "monitoring.grafana.com/v1alpha1"

    kind: "PodLogs" = "PodLogs"

    metadata?: v1.ObjectMeta

    spec?: MonitoringGrafanaComV1alpha1PodLogsSpec


schema MonitoringGrafanaComV1alpha1PodLogsSpec:
    """
    Spec holds the specification of the desired behavior for the PodLogs.

    Attributes
    ----------
    jobLabel : str, default is Undefined, optional
        The label to use to retrieve the job name from.
    namespaceSelector : MonitoringGrafanaComV1alpha1PodLogsSpecNamespaceSelector, default is Undefined, optional
        namespace selector
    pipelineStages : [MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0], default is Undefined, optional
        Pipeline stages for this pod. Pipeline stages support transforming and filtering log lines.
    podTargetLabels : [str], default is Undefined, optional
        PodTargetLabels transfers labels on the Kubernetes Pod onto the target.
    relabelings : [MonitoringGrafanaComV1alpha1PodLogsSpecRelabelingsItems0], default is Undefined, optional
        RelabelConfigs to apply to logs before delivering. Grafana Agent Operator automatically adds relabelings for a few standard Kubernetes fields and replaces original scrape job name with __tmp_logs_job_name. 
         More info: https://grafana.com/docs/loki/latest/clients/promtail/configuration/#relabel_configs
    selector : MonitoringGrafanaComV1alpha1PodLogsSpecSelector, default is Undefined, required
        selector
    """


    jobLabel?: str

    namespaceSelector?: MonitoringGrafanaComV1alpha1PodLogsSpecNamespaceSelector

    pipelineStages?: [MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0]

    podTargetLabels?: [str]

    relabelings?: [MonitoringGrafanaComV1alpha1PodLogsSpecRelabelingsItems0]

    selector: MonitoringGrafanaComV1alpha1PodLogsSpecSelector


schema MonitoringGrafanaComV1alpha1PodLogsSpecNamespaceSelector:
    """
    Selector to select which namespaces the Pod objects are discovered from.

    Attributes
    ----------
    any : bool, default is Undefined, optional
        Boolean describing whether all namespaces are selected in contrast to a list restricting them.
    matchNames : [str], default is Undefined, optional
        List of namespace names to select from.
    """


    any?: bool

    matchNames?: [str]


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0:
    """
    PipelineStageSpec defines an individual pipeline stage. Each stage type is mutually exclusive and no more than one may be set per stage. 
     More information on pipelines can be found in the Promtail documentation: https://grafana.com/docs/loki/latest/clients/promtail/pipelines/

    Attributes
    ----------
    cri : any, default is Undefined, optional
        CRI is a parsing stage that reads log lines using the standard CRI logging format. Supply cri: {} to enable.
    docker : any, default is Undefined, optional
        Docker is a parsing stage that reads log lines using the standard Docker logging format. Supply docker: {} to enable.
    drop : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Drop, default is Undefined, optional
        drop
    json : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0JSON, default is Undefined, optional
        json
    labelAllow : [str], default is Undefined, optional
        LabelAllow is an action stage that only allows the provided labels to be included in the label set that is sent to Loki with the log entry.
    labelDrop : [str], default is Undefined, optional
        LabelDrop is an action stage that drops labels from the label set that is sent to Loki with the log entry.
    labels : {str:str}, default is Undefined, optional
        Labels is an action stage that takes data from the extracted map and modifies the label set that is sent to Loki with the log entry. 
         The key is REQUIRED and represents the name for the label that will be created. Value is optional and will be the name from extracted data to use for the value of the label. If the value is not provided, it defaults to match the key.
    limit : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Limit, default is Undefined, optional
        limit
    match : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Match, default is Undefined, optional
        match
    metrics : {str:MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0MetricsAnon}, default is Undefined, optional
        Metrics is an action stage that supports defining and updating metrics based on data from the extracted map. Created metrics are not pushed to Loki or Prometheus and are instead exposed via the /metrics endpoint of the Grafana Agent pod. The Grafana Agent Operator should be configured with a MetricsInstance that discovers the logging DaemonSet to collect metrics created by this stage.
    multiline : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Multiline, default is Undefined, optional
        multiline
    output : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Output, default is Undefined, optional
        output
    pack : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Pack, default is Undefined, optional
        pack
    regex : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Regex, default is Undefined, optional
        regex
    replace : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Replace, default is Undefined, optional
        replace
    template : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Template, default is Undefined, optional
        template
    tenant : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Tenant, default is Undefined, optional
        tenant
    timestamp : MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Timestamp, default is Undefined, optional
        timestamp
    """


    cri?: any

    docker?: any

    drop?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Drop

    json?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0JSON

    labelAllow?: [str]

    labelDrop?: [str]

    labels?: {str:str}

    limit?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Limit

    match?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Match

    metrics?: {str:MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0MetricsAnon}

    multiline?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Multiline

    output?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Output

    pack?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Pack

    regex?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Regex

    replace?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Replace

    template?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Template

    tenant?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Tenant

    timestamp?: MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Timestamp


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Drop:
    """
    Drop is a filtering stage that lets you drop certain logs.

    Attributes
    ----------
    dropCounterReason : str, default is Undefined, optional
        Every time a log line is dropped, the metric logentry_dropped_lines_total is incremented. A "reason" label is added, and can be customized by providing a custom value here. Defaults to "drop_stage".
    expression : str, default is Undefined, optional
        RE2 regular expression. 
         If source is provided, the regex attempts to match the source. 
         If no source is provided, then the regex attempts to attach the log line. 
         If the provided regex matches the log line or a provided source, the line is dropped.
    longerThan : str, default is Undefined, optional
        LongerThan will drop a log line if it its content is longer than this value (in bytes). Can be expressed as an integer (8192) or a number with a suffix (8kb).
    olderThan : str, default is Undefined, optional
        OlderThan will be parsed as a Go duration. If the log line's timestamp is older than the current time minus the provided duration, it will be dropped.
    source : str, default is Undefined, optional
        Name from the extract data to parse. If empty, uses the log message.
    value : str, default is Undefined, optional
        Value can only be specified when source is specified. If the value provided is an exact match for the given source then the line will be dropped. 
         Mutually exclusive with expression.
    """


    dropCounterReason?: str

    expression?: str

    longerThan?: str

    olderThan?: str

    source?: str

    value?: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0JSON:
    """
    JSON is a parsing stage that reads the log line as JSON and accepts JMESPath expressions to extract data. 
     Information on JMESPath: http://jmespath.org/

    Attributes
    ----------
    expressions : {str:str}, default is Undefined, optional
        Set of the key/value pairs of JMESPath expressions. The key will be the key in the extracted data while the expression will be the value, evaluated as a JMESPath from the source data. 
         Literal JMESPath expressions can be used by wrapping a key in double quotes, which then must be wrapped again in single quotes in YAML so they get passed to the JMESPath parser.
    source : str, default is Undefined, optional
        Name from the extracted data to parse as JSON. If empty, uses entire log message.
    """


    expressions?: {str:str}

    source?: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Limit:
    """
    Limit is a rate-limiting stage that throttles logs based on several options.

    Attributes
    ----------
    burst : int, default is Undefined, optional
        The cap in the quantity of burst lines that Promtail will push to Loki.
    drop : bool, default is Undefined, optional
        When drop is true, log lines that exceed the current rate limit are discarded. When drop is false, log lines that exceed the current rate limit wait to enter the back pressure mode. 
         Defaults to false.
    rate : int, default is Undefined, optional
        The rate limit in lines per second that Promtail will push to Loki.
    """


    burst?: int

    drop?: bool

    rate?: int


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Match:
    """
    Match is a filtering stage that conditionally applies a set of stages or drop entries when a log entry matches a configurable LogQL stream selector and filter expressions.

    Attributes
    ----------
    action : str, default is Undefined, optional
        Determines what action is taken when the selector matches the log line. Can be keep or drop. Defaults to keep. When set to drop, entries are dropped and no later metrics are recorded. Stages must be empty when dropping metrics.
    dropCounterReason : str, default is Undefined, optional
        Every time a log line is dropped, the metric logentry_dropped_lines_total is incremented. A "reason" label is added, and can be customized by providing a custom value here. Defaults to "match_stage."
    pipelineName : str, default is Undefined, optional
        Names the pipeline. When defined, creates an additional label in the pipeline_duration_seconds histogram, where the value is concatenated with job_name using an underscore.
    selector : str, default is Undefined, required
        LogQL stream selector and filter expressions. Required.
    stages : str, default is Undefined, optional
        Nested set of pipeline stages to execute when action is keep and the log line matches selector. 
         An example value for stages may be: 
         stages: | - json: {} - labelAllow: [foo, bar] 
         Note that stages is a string because SIG API Machinery does not support recursive types, and so it cannot be validated for correctness. Be careful not to mistype anything.
    """


    action?: str

    dropCounterReason?: str

    pipelineName?: str

    selector: str

    stages?: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0MetricsAnon:
    """
    MetricsStageSpec is an action stage that allows for defining and updating metrics based on data from the extracted map. Created metrics are not pushed to Loki or Prometheus and are instead exposed via the /metrics endpoint of the Grafana Agent pod. The Grafana Agent Operator should be configured with a MetricsInstance that discovers the logging DaemonSet to collect metrics created by this stage.

    Attributes
    ----------
    action : str, default is Undefined, required
        The action to take against the metric. Required. 
         Must be either "inc" or "add" for type: counter or type: histogram. When type: gauge, must be one of "set", "inc", "dec", "add", or "sub". 
         "add", "set", or "sub" requires the extracted value to be convertible to a positive float.
    buckets : [str], default is Undefined, optional
        Buckets to create. Bucket values must be convertible to float64s. Extremely large or small numbers are subject to some loss of precision. Only valid for type: histogram.
    countEntryBytes : bool, default is Undefined, optional
        If true all log line bytes are counted. Can only be set with matchAll: true and action: add. 
         Only valid for type: counter.
    description : str, default is Undefined, optional
        Sets the description for the created metric.
    matchAll : bool, default is Undefined, optional
        If true, all log lines are counted without attempting to match the source to the extracted map. Mutually exclusive with value. 
         Only valid for type: counter.
    maxIdleDuration : str, default is Undefined, optional
        Label values on metrics are dynamic which can cause exported metrics to go stale. To prevent unbounded cardinality, any metrics not updated within MaxIdleDuration are removed. 
         Must be greater or equal to 1s. Defaults to 5m.
    prefix : str, default is Undefined, optional
        Sets the custom prefix name for the metric. Defaults to "promtail_custom_".
    source : str, default is Undefined, optional
        Key from the extracted data map to use for the metric. Defaults to the metrics name if not present.
    $type : str, default is Undefined, required
        The metric type to create. Must be one of counter, gauge, histogram. Required.
    value : str, default is Undefined, optional
        Filters down source data and only changes the metric if the targeted value matches the provided string exactly. If not present, all data matches.
    """


    action: str

    buckets?: [str]

    countEntryBytes?: bool

    description?: str

    matchAll?: bool

    maxIdleDuration?: str

    prefix?: str

    source?: str

    $type: str

    value?: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Multiline:
    """
    Multiline stage merges multiple lines into a multiline block before passing it on to the next stage in the pipeline.

    Attributes
    ----------
    firstLine : str, default is Undefined, required
        RE2 regular expression. Creates a new multiline block when matched. Required.
    maxLines : int, default is Undefined, optional
        Maximum number of lines a block can have. A new block is started if the number of lines surpasses this value. Defaults to 128.
    maxWaitTime : str, default is Undefined, optional
        Maximum time to wait before passing on the multiline block to the next stage if no new lines are received. Defaults to 3s.
    """


    firstLine: str

    maxLines?: int

    maxWaitTime?: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Output:
    """
    Output stage is an action stage that takes data from the extracted map and changes the log line that will be sent to Loki.

    Attributes
    ----------
    source : str, default is Undefined, required
        Name from extract data to use for the log entry. Required.
    """


    source: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Pack:
    """
    Pack is a transform stage that lets you embed extracted values and labels into the log line by packing the log line and labels inside of a JSON object.

    Attributes
    ----------
    ingestTimestamp : bool, default is Undefined, optional
        If the resulting log line should use any existing timestamp or use time.Now() when the line was created. Set to true when combining several log streams from different containers to avoid out of order errors.
    labels : [str], default is Undefined, required
        Name from extracted data or line labels. Required. Labels provided here are automatically removed from output labels.
    """


    ingestTimestamp?: bool

    labels: [str]


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Regex:
    """
    Regex is a parsing stage that parses a log line using a regular expression.  Named capture groups in the regex allows for adding data into the extracted map.

    Attributes
    ----------
    expression : str, default is Undefined, required
        RE2 regular expression. Each capture group MUST be named. Required.
    source : str, default is Undefined, optional
        Name from extracted data to parse. If empty, defaults to using the log message.
    """


    expression: str

    source?: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Replace:
    """
    Replace is a parsing stage that parses a log line using a regular expression and replaces the log line. Named capture groups in the regex allows for adding data into the extracted map.

    Attributes
    ----------
    expression : str, default is Undefined, required
        RE2 regular expression. Each capture group MUST be named. Required.
    replace : str, default is Undefined, optional
        Value to replace the captured group with.
    source : str, default is Undefined, optional
        Name from extracted data to parse. If empty, defaults to using the log message.
    """


    expression: str

    replace?: str

    source?: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Template:
    """
    Template is a transform stage that manipulates the values in the extracted map using Go's template syntax.

    Attributes
    ----------
    source : str, default is Undefined, required
        Name from extracted data to parse. Required. If empty, defaults to using the log message.
    template : str, default is Undefined, required
        Go template string to use. Required. In addition to normal template functions, ToLower, ToUpper, Replace, Trim, TrimLeft, TrimRight, TrimPrefix, and TrimSpace are also available.
    """


    source: str

    template: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Tenant:
    """
    Tenant is an action stage that sets the tenant ID for the log entry picking it from a field in the extracted data map. If the field is missing, the default LogsClientSpec.tenantId will be used.

    Attributes
    ----------
    label : str, default is Undefined, optional
        Name from labels whose value should be set as tenant ID. Mutually exclusive with source and value.
    source : str, default is Undefined, optional
        Name from extracted data to use as the tenant ID. Mutually exclusive with label and value.
    value : str, default is Undefined, optional
        Value to use for the template ID. Useful when this stage is used within a conditional pipeline such as match. Mutually exclusive with label and source.
    """


    label?: str

    source?: str

    value?: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecPipelineStagesItems0Timestamp:
    """
    Timestamp is an action stage that can change the timestamp of a log line before it is sent to Loki. If not present, the timestamp of a log line defaults to the time when the log line was read.

    Attributes
    ----------
    actionOnFailure : str, default is Undefined, optional
        Action to take when the timestamp can't be extracted or parsed. Can be skip or fudge. Defaults to fudge.
    fallbackFormats : [str], default is Undefined, optional
        Fallback formats to try if format fails.
    format : str, default is Undefined, required
        Determines format of the time string. Required. Can be one of: ANSIC, UnixDate, RubyDate, RFC822, RFC822Z, RFC850, RFC1123, RFC1123Z, RFC3339, RFC3339Nano, Unix, UnixMs, UnixUs, UnixNs.
    location : str, default is Undefined, optional
        IANA Timezone Database string.
    source : str, default is Undefined, required
        Name from extracted data to use as the timestamp. Required.
    """


    actionOnFailure?: str

    fallbackFormats?: [str]

    format: str

    location?: str

    source: str


schema MonitoringGrafanaComV1alpha1PodLogsSpecRelabelingsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on regex matching. Default is 'replace'. uppercase and lowercase actions require Prometheus >= 2.36.
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex.match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringGrafanaComV1alpha1PodLogsSpecSelector:
    """
    Selector to select Pod objects. Required.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1PodLogsSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1PodLogsSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1PodLogsSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


