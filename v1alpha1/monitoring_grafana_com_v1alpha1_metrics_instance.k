"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MetricsInstance:
    """
    MetricsInstance controls an individual Metrics instance within a Grafana Agent deployment.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.grafana.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MetricsInstance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGrafanaComV1alpha1MetricsInstanceSpec, default is Undefined, optional
        spec
    """


    apiVersion: "monitoring.grafana.com/v1alpha1" = "monitoring.grafana.com/v1alpha1"

    kind: "MetricsInstance" = "MetricsInstance"

    metadata?: v1.ObjectMeta

    spec?: MonitoringGrafanaComV1alpha1MetricsInstanceSpec


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpec:
    """
    Spec holds the specification of the desired behavior for the Metrics instance.

    Attributes
    ----------
    additionalScrapeConfigs : MonitoringGrafanaComV1alpha1MetricsInstanceSpecAdditionalScrapeConfigs, default is Undefined, optional
        additional scrape configs
    maxWALTime : str, default is Undefined, optional
        MaxWALTime is the maximum amount of time that series and samples can exist in the WAL before being forcibly deleted.
    minWALTime : str, default is Undefined, optional
        MinWALTime is the minimum amount of time that series and samples can exist in the WAL before being considered for deletion.
    podMonitorNamespaceSelector : MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorNamespaceSelector, default is Undefined, optional
        pod monitor namespace selector
    podMonitorSelector : MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorSelector, default is Undefined, optional
        pod monitor selector
    probeNamespaceSelector : MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeNamespaceSelector, default is Undefined, optional
        probe namespace selector
    probeSelector : MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeSelector, default is Undefined, optional
        probe selector
    remoteFlushDeadline : str, default is Undefined, optional
        RemoteFlushDeadline is the deadline for flushing data when an instance shuts down.
    remoteWrite : [MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0], default is Undefined, optional
        RemoteWrite controls remote_write settings for this instance.
    serviceMonitorNamespaceSelector : MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorNamespaceSelector, default is Undefined, optional
        service monitor namespace selector
    serviceMonitorSelector : MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorSelector, default is Undefined, optional
        service monitor selector
    walTruncateFrequency : str, default is Undefined, optional
        WALTruncateFrequency specifies how frequently to run the WAL truncation process. Higher values cause the WAL to increase and for old series to stay in the WAL longer, but reduces the chance of data loss when remote_write fails for longer than the given frequency.
    writeStaleOnShutdown : bool, default is Undefined, optional
        WriteStaleOnShutdown writes staleness markers on shutdown for all series.
    """


    additionalScrapeConfigs?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecAdditionalScrapeConfigs

    maxWALTime?: str

    minWALTime?: str

    podMonitorNamespaceSelector?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorNamespaceSelector

    podMonitorSelector?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorSelector

    probeNamespaceSelector?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeNamespaceSelector

    probeSelector?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeSelector

    remoteFlushDeadline?: str

    remoteWrite?: [MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0]

    serviceMonitorNamespaceSelector?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorNamespaceSelector

    serviceMonitorSelector?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorSelector

    walTruncateFrequency?: str

    writeStaleOnShutdown?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecAdditionalScrapeConfigs:
    """
    AdditionalScrapeConfigs lets you specify a key of a Secret containing additional Grafana Agent Prometheus scrape configurations. The specified scrape configurations are appended to the configurations generated by Grafana Agent Operator. Specified job configurations must have the form specified in the official Prometheus documentation: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config. As scrape configs are appended, you must make sure the configuration is still valid. Note that it's possible that this feature will break future upgrades of Grafana Agent. Review both Grafana Agent and Prometheus release notes to ensure that no incompatible scrape configs will break Grafana Agent after the upgrade.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorNamespaceSelector:
    """
    PodMonitorNamespaceSelector are the set of labels to determine which namespaces to watch for PodMonitor discovery. If nil, it only checks its own namespace.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorSelector:
    """
    PodMonitorSelector determines which PodMonitors to selected for target discovery. Experimental.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecPodMonitorSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeNamespaceSelector:
    """
    ProbeNamespaceSelector is the set of labels that determines which namespaces to watch for Probe discovery. If nil, it only checks own namespace.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeSelector:
    """
    ProbeSelector determines which Probes to select for target discovery.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecProbeSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0:
    """
    RemoteWriteSpec defines the remote_write configuration for Prometheus.

    Attributes
    ----------
    basicAuth : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerToken : str, default is Undefined, optional
        BearerToken used for remote_write.
    bearerTokenFile : str, default is Undefined, optional
        BearerTokenFile used to read bearer token.
    headers : {str:str}, default is Undefined, optional
        Headers is a set of custom HTTP headers to be sent along with each remote_write request. Be aware that any headers set by Grafana Agent itself can't be overwritten.
    metadataConfig : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0MetadataConfig, default is Undefined, optional
        metadata config
    name : str, default is Undefined, optional
        Name of the remote_write queue. Must be unique if specified. The name is used in metrics and logging in order to differentiate queues.
    oauth2 : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2, default is Undefined, optional
        oauth2
    proxyUrl : str, default is Undefined, optional
        ProxyURL to proxy requests through. Optional.
    queueConfig : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0QueueConfig, default is Undefined, optional
        queue config
    remoteTimeout : str, default is Undefined, optional
        RemoteTimeout is the timeout for requests to the remote_write endpoint.
    sigv4 : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4, default is Undefined, optional
        sigv4
    tlsConfig : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        URL of the endpoint to send samples to.
    writeRelabelConfigs : [MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0WriteRelabelConfigsItems0], default is Undefined, optional
        WriteRelabelConfigs holds relabel_configs to relabel samples before they are sent to the remote_write endpoint.
    """


    basicAuth?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuth

    bearerToken?: str

    bearerTokenFile?: str

    headers?: {str:str}

    metadataConfig?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0MetadataConfig

    name?: str

    oauth2?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2

    proxyUrl?: str

    queueConfig?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0QueueConfig

    remoteTimeout?: str

    sigv4?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4

    tlsConfig?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfig

    url: str

    writeRelabelConfigs?: [MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0WriteRelabelConfigsItems0]


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuth:
    """
    BasicAuth for the URL.

    Attributes
    ----------
    password : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuthPassword

    username?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuthUsername


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuthPassword:
    """
    The secret in the service monitor namespace that contains the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0BasicAuthUsername:
    """
    The secret in the service monitor namespace that contains the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0MetadataConfig:
    """
    MetadataConfig configures the sending of series metadata to remote storage.

    Attributes
    ----------
    send : bool, default is Undefined, optional
        Send enables metric metadata to be sent to remote storage.
    sendInterval : str, default is Undefined, optional
        SendInterval controls how frequently metric metadata is sent to remote storage.
    """


    send?: bool

    sendInterval?: str


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2:
    """
    Oauth2 for URL

    Attributes
    ----------
    clientId : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    tokenUrl : str, default is Undefined, required
        The URL to fetch the token from
    """


    clientId: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientID

    clientSecret: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientSecret

    endpointParams?: {str:str}

    scopes?: [str]

    tokenUrl: str


    check:
        len(tokenUrl) >= 1


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientIDConfigMap

    secret?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientIDSecret


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Oauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0QueueConfig:
    """
    QueueConfig allows tuning of the remote_write queue parameters.

    Attributes
    ----------
    batchSendDeadline : str, default is Undefined, optional
        BatchSendDeadline is the maximum time a sample will wait in the buffer.
    capacity : int, default is Undefined, optional
        Capacity is the number of samples to buffer per shard before samples start being dropped.
    maxBackoff : str, default is Undefined, optional
        MaxBackoff is the maximum retry delay.
    maxRetries : int, default is Undefined, optional
        MaxRetries is the maximum number of times to retry a batch on recoverable errors.
    maxSamplesPerSend : int, default is Undefined, optional
        MaxSamplesPerSend is the maximum number of samples per send.
    maxShards : int, default is Undefined, optional
        MaxShards is the maximum number of shards, i.e., the amount of concurrency.
    minBackoff : str, default is Undefined, optional
        MinBackoff is the initial retry delay. MinBackoff is doubled for every retry.
    minShards : int, default is Undefined, optional
        MinShards is the minimum number of shards, i.e., the amount of concurrency.
    retryOnRateLimit : bool, default is Undefined, optional
        RetryOnRateLimit retries requests when encountering rate limits.
    """


    batchSendDeadline?: str

    capacity?: int

    maxBackoff?: str

    maxRetries?: int

    maxSamplesPerSend?: int

    maxShards?: int

    minBackoff?: str

    minShards?: int

    retryOnRateLimit?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4:
    """
    SigV4 configures SigV4-based authentication to the remote_write endpoint. SigV4-based authentication is used if SigV4 is defined, even with an empty object.

    Attributes
    ----------
    accessKey : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4AccessKey, default is Undefined, optional
        access key
    profile : str, default is Undefined, optional
        Profile is the named AWS profile to use for authentication.
    region : str, default is Undefined, optional
        Region of the AWS endpoint. If blank, the region from the default credentials chain is used.
    roleARN : str, default is Undefined, optional
        RoleARN is the AWS Role ARN to use for authentication, as an alternative for using the AWS API keys.
    secretKey : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4SecretKey, default is Undefined, optional
        secret key
    """


    accessKey?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4AccessKey

    profile?: str

    region?: str

    roleARN?: str

    secretKey?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4SecretKey


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4AccessKey:
    """
    AccessKey holds the secret of the AWS API access key to use for signing. If not provided, the environment variable AWS_ACCESS_KEY_ID is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0Sigv4SecretKey:
    """
    SecretKey of the AWS API to use for signing. If blank, the environment variable AWS_SECRET_ACCESS_KEY is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfig:
    """
    TLSConfig to use for remote_write.

    Attributes
    ----------
    ca : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCa

    caFile?: str

    cert?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCaConfigMap

    secret?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCaSecret


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCertConfigMap

    secret?: MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCertSecret


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecRemoteWriteItems0WriteRelabelConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on regex matching. Default is 'replace'. uppercase and lowercase actions require Prometheus >= 2.36.
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex.match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorNamespaceSelector:
    """
    ServiceMonitorNamespaceSelector is the set of labels that determine which namespaces to watch for ServiceMonitor discovery. If nil, it only checks its own namespace.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorSelector:
    """
    ServiceMonitorSelector determines which ServiceMonitors to select for target discovery.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1MetricsInstanceSpecServiceMonitorSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


