"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema GrafanaAgent:
    """
    GrafanaAgent defines a Grafana Agent deployment.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.grafana.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GrafanaAgent", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringGrafanaComV1alpha1GrafanaAgentSpec, default is Undefined, optional
        spec
    """


    apiVersion: "monitoring.grafana.com/v1alpha1" = "monitoring.grafana.com/v1alpha1"

    kind: "GrafanaAgent" = "GrafanaAgent"

    metadata?: v1.ObjectMeta

    spec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpec


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpec:
    """
    Spec holds the specification of the desired behavior for the Grafana Agent cluster.

    Attributes
    ----------
    affinity : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinity, default is Undefined, optional
        affinity
    apiServer : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServer, default is Undefined, optional
        api server
    configMaps : [str], default is Undefined, optional
        ConfigMaps is a list of config maps in the same namespace as the GrafanaAgent object which will be mounted into each running Grafana Agent pod. The ConfigMaps are mounted into /var/lib/grafana-agent/extra-configmaps/<configmap-name>.
    configReloaderImage : str, default is Undefined, optional
        Image, when specified, overrides the image used to run Config Reloader. Specify the image along with a tag. You still need to set the version to ensure Grafana Agent Operator knows which version of Grafana Agent is being configured.
    configReloaderVersion : str, default is Undefined, optional
        Version of Config Reloader to be deployed.
    containers : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0], default is Undefined, optional
        Containers lets you inject additional containers or modify operator-generated containers. This can be used to add an authentication proxy to a Grafana Agent pod or to change the behavior of an operator-generated container. Containers described here modify an operator-generated container if they share the same name and if modifications are done via a strategic merge patch. The current container names are: `grafana-agent` and `config-reloader`. Overriding containers is entirely outside the scope of what the Grafana Agent team supports and by doing so, you accept that this behavior may break at any time without notice.
    disableReporting : bool, default is Undefined, optional
        disableReporting disables reporting of enabled feature flags to Grafana.
    disableSupportBundle : bool, default is Undefined, optional
        disableSupportBundle disables the generation of support bundles.
    enableConfigReadAPI : bool, default is Undefined, optional
        enableConfigReadAPI enables the read API for viewing the currently running config port 8080 on the agent.
    image : str, default is Undefined, optional
        Image, when specified, overrides the image used to run Agent. Specify the image along with a tag. You still need to set the version to ensure Grafana Agent Operator knows which version of Grafana Agent is being configured.
    imagePullSecrets : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets holds an optional list of references to Secrets within the same namespace used for pulling the Grafana Agent image from registries. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
    initContainers : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0], default is Undefined, optional
        InitContainers let you add initContainers to the pod definition. These can be used to, for example, fetch secrets for injection into the Grafana Agent configuration from external sources. Errors during the execution of an initContainer cause the pod to restart. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using initContainers for any use case other than secret fetching is entirely outside the scope of what the Grafana Agent maintainers support and by doing so, you accept that this behavior may break at any time without notice.
    integrations : MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrations, default is Undefined, optional
        integrations
    logFormat : str, default is Undefined, optional
        LogFormat controls the logging format of the generated pods. Defaults to "logfmt" if not set.
    logLevel : str, default is Undefined, optional
        LogLevel controls the log level of the generated pods. Defaults to "info" if not set.
    logs : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogs, default is Undefined, optional
        logs
    metrics : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetrics, default is Undefined, optional
        metrics
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector defines which nodes pods should be scheduling on.
    paused : bool, default is Undefined, optional
        Paused prevents actions except for deletion to be performed on the underlying managed objects.
    podMetadata : MonitoringGrafanaComV1alpha1GrafanaAgentSpecPodMetadata, default is Undefined, optional
        pod metadata
    portName : str, default is Undefined, optional
        Port name used for the pods and governing service. This defaults to agent-metrics.
    priorityClassName : str, default is Undefined, optional
        PriorityClassName is the priority class assigned to pods.
    resources : MonitoringGrafanaComV1alpha1GrafanaAgentSpecResources, default is Undefined, optional
        resources
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName is the runtime class assigned to pods.
    secrets : [str], default is Undefined, optional
        Secrets is a list of secrets in the same namespace as the GrafanaAgent object which will be mounted into each running Grafana Agent pod. The secrets are mounted into /var/lib/grafana-agent/extra-secrets/<secret-name>.
    securityContext : MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContext, default is Undefined, optional
        security context
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use for running Grafana Agent pods.
    storage : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorage, default is Undefined, optional
        storage
    tolerations : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecTolerationsItems0], default is Undefined, optional
        Tolerations, if specified, controls the pod's tolerations.
    topologySpreadConstraints : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints, if specified, controls the pod's topology spread constraints.
    version : str, default is Undefined, optional
        Version of Grafana Agent to be deployed.
    volumeMounts : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumeMountsItems0], default is Undefined, optional
        VolumeMounts lets you configure additional VolumeMounts on the output StatefulSet definition. Specified VolumeMounts are appended to other VolumeMounts generated as a result of StorageSpec objects in the Grafana Agent container.
    volumes : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0], default is Undefined, optional
        Volumes allows configuration of additional volumes on the output StatefulSet definition. The volumes specified are appended to other volumes that are generated as a result of StorageSpec objects.
    """


    affinity?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinity

    apiServer?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServer

    configMaps?: [str]

    configReloaderImage?: str

    configReloaderVersion?: str

    containers?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0]

    disableReporting?: bool = False

    disableSupportBundle?: bool = False

    enableConfigReadAPI?: bool = False

    image?: str

    imagePullSecrets?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecImagePullSecretsItems0]

    initContainers?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0]

    integrations?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrations

    logFormat?: str

    logLevel?: str

    logs?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogs

    metrics?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetrics

    nodeSelector?: {str:str}

    paused?: bool

    podMetadata?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecPodMetadata

    portName?: str

    priorityClassName?: str

    resources?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecResources

    runtimeClassName?: str

    secrets?: [str]

    securityContext?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContext

    serviceAccountName?: str

    storage?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorage

    tolerations?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecTolerationsItems0]

    topologySpreadConstraints?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0]

    version?: str

    volumeMounts?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumeMountsItems0]

    volumes?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServer:
    """
    APIServerConfig lets you specify a host and auth methods to access the Kubernetes API server. If left empty, the Agent assumes that it is running inside of the cluster and will discover API servers automatically and use the pod's CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount.

    Attributes
    ----------
    authorization : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuth, default is Undefined, optional
        basic auth
    bearerToken : str, default is Undefined, optional
        Bearer token for accessing apiserver.
    bearerTokenFile : str, default is Undefined, optional
        File to read bearer token for accessing apiserver.
    host : str, default is Undefined, required
        Host of apiserver. A valid string consisting of a hostname or IP followed by an optional port number
    tlsConfig : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfig, default is Undefined, optional
        tls config
    """


    authorization?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerAuthorization

    basicAuth?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuth

    bearerToken?: str

    bearerTokenFile?: str

    host: str

    tlsConfig?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfig


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerAuthorization:
    """
    Authorization section for accessing apiserver

    Attributes
    ----------
    credentials : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerAuthorizationCredentials, default is Undefined, optional
        credentials
    credentialsFile : str, default is Undefined, optional
        File to read a secret from, mutually exclusive with Credentials (from SafeAuthorization)
    $type : str, default is Undefined, optional
        Set the authentication type. Defaults to Bearer, Basic will cause an error
    """


    credentials?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerAuthorizationCredentials

    credentialsFile?: str

    $type?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerAuthorizationCredentials:
    """
    The secret's key that contains the credentials of the request

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication

    Attributes
    ----------
    password : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuthPassword

    username?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuthUsername


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuthPassword:
    """
    The secret in the service monitor namespace that contains the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerBasicAuthUsername:
    """
    The secret in the service monitor namespace that contains the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfig:
    """
    TLS Config to use for accessing apiserver.

    Attributes
    ----------
    ca : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCa

    caFile?: str

    cert?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigKeySecret

    serverName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCaConfigMap

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCaSecret


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCertConfigMap

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCertSecret


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAPIServerTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinity:
    """
    Affinity, if specified, controls pod scheduling constraints.

    Attributes
    ----------
    nodeAffinity : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinity

    podAffinity?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinity

    podAntiAffinity?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinity


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinity:
    """
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    """
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    """
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    """
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    """
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinity:
    """
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinity:
    """
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    """
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    """
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector, default is Undefined, optional
        namespace selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace".
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector

    namespaces?: [str]

    topologyKey: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    """
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelector:
    """
    A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0NamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0:
    """
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
    readinessProbe : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0]

    envFrom?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0Lifecycle

    livenessProbe?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbe

    name: str

    ports?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0PortsItems0]

    readinessProbe?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbe

    resizePolicy?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ResizePolicyItems0]

    resources?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0Resources

    securityContext?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContext

    startupProbe?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0VolumeDevicesItems0]

    volumeMounts?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0VolumeMountsItems0]

    workingDir?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0SecretRef


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFrom


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromSecretKeyRef


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0Lifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStart

    preStop?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStop


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartExec

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartTCPSocket


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopExec

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopTCPSocket


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbe:
    """
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeGrpc

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbe:
    """
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeGrpc

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0Resources:
    """
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContext:
    """
    SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
    capabilities : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextSeccompProfile

    windowsOptions?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextWindowsOptions


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbe:
    """
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeGrpc

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecImagePullSecretsItems0:
    """
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0:
    """
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The container image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The container image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Container image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Modifying this array with strategic merge patch may corrupt the data. For more information See https://github.com/kubernetes/kubernetes/issues/108255. Cannot be updated.
    readinessProbe : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resizePolicy : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ResizePolicyItems0], default is Undefined, optional
        Resources resize policy for the container.
    resources : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container.
    volumeMounts : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0]

    envFrom?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0Lifecycle

    livenessProbe?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbe

    name: str

    ports?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0PortsItems0]

    readinessProbe?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbe

    resizePolicy?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ResizePolicyItems0]

    resources?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0Resources

    securityContext?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContext

    startupProbe?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0VolumeDevicesItems0]

    volumeMounts?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0VolumeMountsItems0]

    workingDir?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0:
    """
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0SecretRef


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0ConfigMapRef:
    """
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvFromItems0SecretRef:
    """
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0:
    """
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFrom


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFrom:
    """
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    """
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromFieldRef:
    """
    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0EnvItems0ValueFromSecretKeyRef:
    """
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0Lifecycle:
    """
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStart

    preStop?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStop


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStart:
    """
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartExec

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartTCPSocket


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePostStartTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStop:
    """
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopExec

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopTCPSocket


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LifecyclePreStopTCPSocket:
    """
    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbe:
    """
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeExec

    failureThreshold?: int

    grpc?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeGrpc

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0LivenessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0PortsItems0:
    """
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbe:
    """
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeExec

    failureThreshold?: int

    grpc?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeGrpc

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ReadinessProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ResizePolicyItems0:
    """
    ContainerResizePolicy represents resource resize policy for the container.

    Attributes
    ----------
    resourceName : str, default is Undefined, required
        Name of the resource to which this resource resize policy applies. Supported values: cpu, memory.
    restartPolicy : str, default is Undefined, required
        Restart policy to apply when specified resource is resized. If not specified, it defaults to NotRequired.
    """


    resourceName: str

    restartPolicy: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0Resources:
    """
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

    Attributes
    ----------
    claims : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0ResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContext:
    """
    SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.
    capabilities : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    windowsOptions : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextSeLinuxOptions

    seccompProfile?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextSeccompProfile

    windowsOptions?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextWindowsOptions


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextCapabilities:
    """
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextSeccompProfile:
    """
    The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0SecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbe:
    """
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    grpc : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeGrpc, default is Undefined, optional
        grpc
    httpGet : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeExec

    failureThreshold?: int

    grpc?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeGrpc

    httpGet?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeTCPSocket

    terminationGracePeriodSeconds?: int

    timeoutSeconds?: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeExec:
    """
    Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeGrpc:
    """
    GRPC specifies an action involving a GRPC port.

    Attributes
    ----------
    port : int, default is Undefined, required
        Port number of the gRPC service. Number must be in the range 1 to 65535.
    service : str, default is Undefined, optional
        Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). 
         If this is not specified, the default behavior is defined by gRPC.
    """


    port: int

    service?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeHTTPGet:
    """
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    """
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0StartupProbeTCPSocket:
    """
    TCPSocket specifies an action involving a TCP port.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0VolumeDevicesItems0:
    """
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecInitContainersItems0VolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrations:
    """
    Integrations controls the integration subsystem of the Agent and settings unique to deployed integration-specific pods.

    Attributes
    ----------
    namespaceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsNamespaceSelector, default is Undefined, optional
        namespace selector
    selector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsSelector, default is Undefined, optional
        selector
    """


    namespaceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsNamespaceSelector

    selector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsSelector


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsNamespaceSelector:
    """
    Label selector for namespaces to search when discovering integration resources. If nil, integration resources are only discovered in the namespace of the GrafanaAgent resource. 
     Set to `{}` to search all namespaces.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsSelector:
    """
    Label selector to find Integration resources to run. When nil, no integration resources will be defined.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecIntegrationsSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogs:
    """
    Logs controls the logging subsystem of the Agent and settings unique to logging-specific pods that are deployed.

    Attributes
    ----------
    clients : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0], default is Undefined, optional
        A global set of clients to use when a discovered LogsInstance does not have any clients defined.
    enforcedNamespaceLabel : str, default is Undefined, optional
        EnforcedNamespaceLabel enforces adding a namespace label of origin for each metric that is user-created. The label value will always be the namespace of the object that is being created.
    ignoreNamespaceSelectors : bool, default is Undefined, optional
        IgnoreNamespaceSelectors, if true, will ignore NamespaceSelector settings from the PodLogs configs, and they will only discover endpoints within their current namespace.
    instanceNamespaceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceNamespaceSelector, default is Undefined, optional
        instance namespace selector
    instanceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceSelector, default is Undefined, optional
        instance selector
    logsExternalLabelName : str, default is Undefined, optional
        LogsExternalLabelName is the name of the external label used to denote Grafana Agent cluster. Defaults to "cluster." External label will _not_ be added when value is set to the empty string.
    """


    clients?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0]

    enforcedNamespaceLabel?: str

    ignoreNamespaceSelectors?: bool

    instanceNamespaceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceNamespaceSelector

    instanceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceSelector

    logsExternalLabelName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0:
    """
    LogsClientSpec defines the client integration for logs, indicating which Loki server to send logs to.

    Attributes
    ----------
    backoffConfig : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BackoffConfig, default is Undefined, optional
        backoff config
    basicAuth : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuth, default is Undefined, optional
        basic auth
    batchSize : int, default is Undefined, optional
        Maximum batch size (in bytes) of logs to accumulate before sending the batch to Loki.
    batchWait : str, default is Undefined, optional
        Maximum amount of time to wait before sending a batch, even if that batch isn't full.
    bearerToken : str, default is Undefined, optional
        BearerToken used for remote_write.
    bearerTokenFile : str, default is Undefined, optional
        BearerTokenFile used to read bearer token.
    externalLabels : {str:str}, default is Undefined, optional
        ExternalLabels are labels to add to any time series when sending data to Loki.
    oauth2 : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2, default is Undefined, optional
        oauth2
    proxyUrl : str, default is Undefined, optional
        ProxyURL to proxy requests through. Optional.
    tenantId : str, default is Undefined, optional
        Tenant ID used by default to push logs to Loki. If omitted assumes remote Loki is running in single-tenant mode or an authentication layer is used to inject an X-Scope-OrgID header.
    timeout : str, default is Undefined, optional
        Maximum time to wait for a server to respond to a request.
    tlsConfig : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        URL is the URL where Loki is listening. Must be a full HTTP URL, including protocol. Required. Example: https://logs-prod-us-central1.grafana.net/loki/api/v1/push.
    """


    backoffConfig?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BackoffConfig

    basicAuth?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuth

    batchSize?: int

    batchWait?: str

    bearerToken?: str

    bearerTokenFile?: str

    externalLabels?: {str:str}

    oauth2?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2

    proxyUrl?: str

    tenantId?: str

    timeout?: str

    tlsConfig?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfig

    url: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BackoffConfig:
    """
    Configures how to retry requests to Loki when a request fails. Defaults to a minPeriod of 500ms, maxPeriod of 5m, and maxRetries of 10.

    Attributes
    ----------
    maxPeriod : str, default is Undefined, optional
        Maximum backoff time between retries.
    maxRetries : int, default is Undefined, optional
        Maximum number of retries to perform before giving up a request.
    minPeriod : str, default is Undefined, optional
        Initial backoff time between retries. Time between retries is increased exponentially.
    """


    maxPeriod?: str

    maxRetries?: int

    minPeriod?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuth:
    """
    BasicAuth for the Loki server.

    Attributes
    ----------
    password : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuthPassword

    username?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuthUsername


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuthPassword:
    """
    The secret in the service monitor namespace that contains the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0BasicAuthUsername:
    """
    The secret in the service monitor namespace that contains the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2:
    """
    Oauth2 for URL

    Attributes
    ----------
    clientId : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    tokenUrl : str, default is Undefined, required
        The URL to fetch the token from
    """


    clientId: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientID

    clientSecret: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientSecret

    endpointParams?: {str:str}

    scopes?: [str]

    tokenUrl: str


    check:
        len(tokenUrl) >= 1


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientIDConfigMap

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientIDSecret


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0Oauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfig:
    """
    TLSConfig to use for the client. Only used when the protocol of the URL is https.

    Attributes
    ----------
    ca : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCa

    caFile?: str

    cert?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCaConfigMap

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCaSecret


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCertConfigMap

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCertSecret


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsClientsItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceNamespaceSelector:
    """
    InstanceNamespaceSelector are the set of labels to determine which namespaces to watch for LogInstances. If not provided, only checks own namespace.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceSelector:
    """
    InstanceSelector determines which LogInstances should be selected for running. Each instance runs its own set of Prometheus components, including service discovery, scraping, and remote_write.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecLogsInstanceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetrics:
    """
    Metrics controls the metrics subsystem of the Agent and settings unique to metrics-specific pods that are deployed.

    Attributes
    ----------
    arbitraryFSAccessThroughSMs : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsArbitraryFSAccessThroughSMs, default is Undefined, optional
        arbitrary f s access through s ms
    enforcedNamespaceLabel : str, default is Undefined, optional
        EnforcedNamespaceLabel enforces adding a namespace label of origin for each metric that is user-created. The label value is always the namespace of the object that is being created.
    enforcedSampleLimit : int, default is Undefined, optional
        EnforcedSampleLimit defines a global limit on the number of scraped samples that are accepted. This overrides any SampleLimit set per ServiceMonitor and/or PodMonitor. It is meant to be used by admins to enforce the SampleLimit to keep the overall number of samples and series under the desired limit. Note that if a SampleLimit from a ServiceMonitor or PodMonitor is lower, that value is used instead.
    enforcedTargetLimit : int, default is Undefined, optional
        EnforcedTargetLimit defines a global limit on the number of scraped targets. This overrides any TargetLimit set per ServiceMonitor and/or PodMonitor. It is meant to be used by admins to enforce the TargetLimit to keep the overall number of targets under the desired limit. Note that if a TargetLimit from a ServiceMonitor or PodMonitor is higher, that value is used instead.
    externalLabels : {str:str}, default is Undefined, optional
        ExternalLabels are labels to add to any time series when sending data over remote_write.
    ignoreNamespaceSelectors : bool, default is Undefined, optional
        IgnoreNamespaceSelectors, if true, ignores NamespaceSelector settings from the PodMonitor and ServiceMonitor configs, so that they only discover endpoints within their current namespace.
    instanceNamespaceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceNamespaceSelector, default is Undefined, optional
        instance namespace selector
    instanceSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceSelector, default is Undefined, optional
        instance selector
    metricsExternalLabelName : str, default is Undefined, optional
        MetricsExternalLabelName is the name of the external label used to denote Grafana Agent cluster. Defaults to "cluster." The external label is _not_ added when the value is set to the empty string.
    overrideHonorLabels : bool, default is Undefined, optional
        OverrideHonorLabels, if true, overrides all configured honor_labels read from ServiceMonitor or PodMonitor and sets them to false.
    overrideHonorTimestamps : bool, default is Undefined, optional
        OverrideHonorTimestamps allows global enforcement for honoring timestamps in all scrape configs.
    remoteWrite : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0], default is Undefined, optional
        RemoteWrite controls default remote_write settings for all instances. If an instance does not provide its own RemoteWrite settings, these will be used instead.
    replicaExternalLabelName : str, default is Undefined, optional
        ReplicaExternalLabelName is the name of the metrics external label used to denote the replica name. Defaults to __replica__. The external label is _not_ added when the value is set to the empty string.
    replicas : int, default is Undefined, optional
        Replicas of each shard to deploy for metrics pods. Number of replicas multiplied by the number of shards is the total number of pods created.
    scrapeInterval : str, default is Undefined, optional
        ScrapeInterval is the time between consecutive scrapes.
    scrapeTimeout : str, default is Undefined, optional
        ScrapeTimeout is the time to wait for a target to respond before marking a scrape as failed.
    shards : int, default is Undefined, optional
        Shards to distribute targets onto. Number of replicas multiplied by the number of shards is the total number of pods created. Note that scaling down shards does not reshard data onto remaining instances; it must be manually moved. Increasing shards does not reshard data either, but it will continue to be available from the same instances. Sharding is performed on the content of the __address__ target meta-label.
    """


    arbitraryFSAccessThroughSMs?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsArbitraryFSAccessThroughSMs

    enforcedNamespaceLabel?: str

    enforcedSampleLimit?: int

    enforcedTargetLimit?: int

    externalLabels?: {str:str}

    ignoreNamespaceSelectors?: bool

    instanceNamespaceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceNamespaceSelector

    instanceSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceSelector

    metricsExternalLabelName?: str

    overrideHonorLabels?: bool

    overrideHonorTimestamps?: bool

    remoteWrite?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0]

    replicaExternalLabelName?: str

    replicas?: int

    scrapeInterval?: str

    scrapeTimeout?: str

    shards?: int


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsArbitraryFSAccessThroughSMs:
    """
    ArbitraryFSAccessThroughSMs configures whether configuration based on a ServiceMonitor can access arbitrary files on the file system of the Grafana Agent container, e.g., bearer token files.

    Attributes
    ----------
    deny : bool, default is Undefined, optional
        deny
    """


    deny?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceNamespaceSelector:
    """
    InstanceNamespaceSelector is the set of labels that determines which namespaces to watch for MetricsInstances. If not provided, it only checks its own namespace.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceNamespaceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceNamespaceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceNamespaceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceSelector:
    """
    InstanceSelector determines which MetricsInstances should be selected for running. Each instance runs its own set of Metrics components, including service discovery, scraping, and remote_write.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsInstanceSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0:
    """
    RemoteWriteSpec defines the remote_write configuration for Prometheus.

    Attributes
    ----------
    basicAuth : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuth, default is Undefined, optional
        basic auth
    bearerToken : str, default is Undefined, optional
        BearerToken used for remote_write.
    bearerTokenFile : str, default is Undefined, optional
        BearerTokenFile used to read bearer token.
    headers : {str:str}, default is Undefined, optional
        Headers is a set of custom HTTP headers to be sent along with each remote_write request. Be aware that any headers set by Grafana Agent itself can't be overwritten.
    metadataConfig : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0MetadataConfig, default is Undefined, optional
        metadata config
    name : str, default is Undefined, optional
        Name of the remote_write queue. Must be unique if specified. The name is used in metrics and logging in order to differentiate queues.
    oauth2 : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2, default is Undefined, optional
        oauth2
    proxyUrl : str, default is Undefined, optional
        ProxyURL to proxy requests through. Optional.
    queueConfig : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0QueueConfig, default is Undefined, optional
        queue config
    remoteTimeout : str, default is Undefined, optional
        RemoteTimeout is the timeout for requests to the remote_write endpoint.
    sigv4 : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4, default is Undefined, optional
        sigv4
    tlsConfig : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfig, default is Undefined, optional
        tls config
    url : str, default is Undefined, required
        URL of the endpoint to send samples to.
    writeRelabelConfigs : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0WriteRelabelConfigsItems0], default is Undefined, optional
        WriteRelabelConfigs holds relabel_configs to relabel samples before they are sent to the remote_write endpoint.
    """


    basicAuth?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuth

    bearerToken?: str

    bearerTokenFile?: str

    headers?: {str:str}

    metadataConfig?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0MetadataConfig

    name?: str

    oauth2?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2

    proxyUrl?: str

    queueConfig?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0QueueConfig

    remoteTimeout?: str

    sigv4?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4

    tlsConfig?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfig

    url: str

    writeRelabelConfigs?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0WriteRelabelConfigsItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuth:
    """
    BasicAuth for the URL.

    Attributes
    ----------
    password : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuthPassword

    username?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuthUsername


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuthPassword:
    """
    The secret in the service monitor namespace that contains the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0BasicAuthUsername:
    """
    The secret in the service monitor namespace that contains the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0MetadataConfig:
    """
    MetadataConfig configures the sending of series metadata to remote storage.

    Attributes
    ----------
    send : bool, default is Undefined, optional
        Send enables metric metadata to be sent to remote storage.
    sendInterval : str, default is Undefined, optional
        SendInterval controls how frequently metric metadata is sent to remote storage.
    """


    send?: bool

    sendInterval?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2:
    """
    Oauth2 for URL

    Attributes
    ----------
    clientId : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    tokenUrl : str, default is Undefined, required
        The URL to fetch the token from
    """


    clientId: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientID

    clientSecret: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientSecret

    endpointParams?: {str:str}

    scopes?: [str]

    tokenUrl: str


    check:
        len(tokenUrl) >= 1


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientIDConfigMap

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientIDSecret


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Oauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0QueueConfig:
    """
    QueueConfig allows tuning of the remote_write queue parameters.

    Attributes
    ----------
    batchSendDeadline : str, default is Undefined, optional
        BatchSendDeadline is the maximum time a sample will wait in the buffer.
    capacity : int, default is Undefined, optional
        Capacity is the number of samples to buffer per shard before samples start being dropped.
    maxBackoff : str, default is Undefined, optional
        MaxBackoff is the maximum retry delay.
    maxRetries : int, default is Undefined, optional
        MaxRetries is the maximum number of times to retry a batch on recoverable errors.
    maxSamplesPerSend : int, default is Undefined, optional
        MaxSamplesPerSend is the maximum number of samples per send.
    maxShards : int, default is Undefined, optional
        MaxShards is the maximum number of shards, i.e., the amount of concurrency.
    minBackoff : str, default is Undefined, optional
        MinBackoff is the initial retry delay. MinBackoff is doubled for every retry.
    minShards : int, default is Undefined, optional
        MinShards is the minimum number of shards, i.e., the amount of concurrency.
    retryOnRateLimit : bool, default is Undefined, optional
        RetryOnRateLimit retries requests when encountering rate limits.
    """


    batchSendDeadline?: str

    capacity?: int

    maxBackoff?: str

    maxRetries?: int

    maxSamplesPerSend?: int

    maxShards?: int

    minBackoff?: str

    minShards?: int

    retryOnRateLimit?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4:
    """
    SigV4 configures SigV4-based authentication to the remote_write endpoint. SigV4-based authentication is used if SigV4 is defined, even with an empty object.

    Attributes
    ----------
    accessKey : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4AccessKey, default is Undefined, optional
        access key
    profile : str, default is Undefined, optional
        Profile is the named AWS profile to use for authentication.
    region : str, default is Undefined, optional
        Region of the AWS endpoint. If blank, the region from the default credentials chain is used.
    roleARN : str, default is Undefined, optional
        RoleARN is the AWS Role ARN to use for authentication, as an alternative for using the AWS API keys.
    secretKey : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4SecretKey, default is Undefined, optional
        secret key
    """


    accessKey?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4AccessKey

    profile?: str

    region?: str

    roleARN?: str

    secretKey?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4SecretKey


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4AccessKey:
    """
    AccessKey holds the secret of the AWS API access key to use for signing. If not provided, the environment variable AWS_ACCESS_KEY_ID is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0Sigv4SecretKey:
    """
    SecretKey of the AWS API to use for signing. If blank, the environment variable AWS_SECRET_ACCESS_KEY is used.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfig:
    """
    TLSConfig to use for remote_write.

    Attributes
    ----------
    ca : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCa, default is Undefined, optional
        ca
    caFile : str, default is Undefined, optional
        Path to the CA cert in the Prometheus container to use for the targets.
    cert : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCert, default is Undefined, optional
        cert
    certFile : str, default is Undefined, optional
        Path to the client cert file in the Prometheus container for the targets.
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keyFile : str, default is Undefined, optional
        Path to the client key file in the Prometheus container for the targets.
    keySecret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCa

    caFile?: str

    cert?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCert

    certFile?: str

    insecureSkipVerify?: bool

    keyFile?: str

    keySecret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigKeySecret

    serverName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCaConfigMap

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCaSecret


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCertConfigMap

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCertSecret


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0TLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecMetricsRemoteWriteItems0WriteRelabelConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on regex matching. Default is 'replace'. uppercase and lowercase actions require Prometheus >= 2.36.
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex.match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecPodMetadata:
    """
    PodMetadata configures Labels and Annotations which are propagated to created Grafana Agent pods.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecResources:
    """
    Resources holds requests and limits for individual pods.

    Attributes
    ----------
    claims : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContext:
    """
    SecurityContext holds pod-level security attributes and common container settings. When unspecified, defaults to the default PodSecurityContext.

    Attributes
    ----------
    fsGroup : int, default is Undefined, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
         1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- 
         If unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.
    fsGroupChangePolicy : str, default is Undefined, optional
        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used. Note that this field cannot be set when spec.os.name is windows.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.
    seLinuxOptions : MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    seccompProfile : MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSeccompProfile, default is Undefined, optional
        seccomp profile
    supplementalGroups : [int], default is Undefined, optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID, the fsGroup (if specified), and group memberships defined in the container image for the uid of the container process. If unspecified, no additional groups are added to any container. Note that group memberships defined in the container image for the uid of the container process are still effective, even if they are not included in this list. Note that this field cannot be set when spec.os.name is windows.
    sysctls : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSysctlsItems0], default is Undefined, optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.
    windowsOptions : MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    fsGroup?: int

    fsGroupChangePolicy?: str

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSeLinuxOptions

    seccompProfile?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSeccompProfile

    supplementalGroups?: [int]

    sysctls?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSysctlsItems0]

    windowsOptions?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextWindowsOptions


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSeLinuxOptions:
    """
    The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSeccompProfile:
    """
    The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.

    Attributes
    ----------
    localhostProfile : str, default is Undefined, optional
        localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
    $type : str, default is Undefined, required
        type indicates which kind of seccomp profile will be applied. Valid options are: 
         Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
    """


    localhostProfile?: str

    $type: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextSysctlsItems0:
    """
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of a property to set
    value : str, default is Undefined, required
        Value of a property to set
    """


    name: str

    value: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecSecurityContextWindowsOptions:
    """
    The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use.
    hostProcess : bool, default is Undefined, optional
        HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    hostProcess?: bool

    runAsUserName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorage:
    """
    Storage spec to specify how storage will be used.

    Attributes
    ----------
    disableMountSubPath : bool, default is Undefined, optional
        *Deprecated: subPath usage will be removed in a future release.*
    emptyDir : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEmptyDir, default is Undefined, optional
        empty dir
    ephemeral : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeral, default is Undefined, optional
        ephemeral
    volumeClaimTemplate : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    disableMountSubPath?: bool

    emptyDir?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEmptyDir

    ephemeral?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeral

    volumeClaimTemplate?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplate


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEmptyDir:
    """
    EmptyDirVolumeSource to be used by the StatefulSet. If specified, it takes precedence over `ephemeral` and `volumeClaimTemplate`. More info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeral:
    """
    EphemeralVolumeSource to be used by the StatefulSet. This is a beta field in k8s 1.21 and GA in 1.15. For lower versions, starting with k8s 1.19, it requires enabling the GenericEphemeralVolume feature gate. More info: https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes

    Attributes
    ----------
    volumeClaimTemplate : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    volumeClaimTemplate?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplate


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplate:
    """
    Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
     An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
     This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
     Required, must not be nil.

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
    spec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: any

    spec: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpec


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpec:
    """
    The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecDataSource

    dataSourceRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef

    resources?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecResources

    selector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified. * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    claims : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplate:
    """
    Defines the PVC spec to be used by the Prometheus StatefulSets. The easiest way to use a volume that cannot be automatically provisioned is to use a label selector alongside manually created PersistentVolumes.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is Undefined, optional
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateMetadata, default is Undefined, optional
        metadata
    spec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpec, default is Undefined, optional
        spec
    status : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion?: str

    kind?: str

    metadata?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateMetadata

    spec?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpec

    status?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateStatus


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateMetadata:
    """
    EmbeddedMetadata contains metadata relevant to an EmbeddedResource.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
    labels : {str:str}, default is Undefined, optional
        Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
    name : str, default is Undefined, optional
        Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
    """


    annotations?: {str:str}

    labels?: {str:str}

    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpec:
    """
    Defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecDataSource

    dataSourceRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecDataSourceRef

    resources?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecResources

    selector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified. * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    claims : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateStatus:
    """
    *Deprecated: this field is never set.*

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    allocatedResources : {str:int | str}, default is Undefined, optional
        allocatedResources is the storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    capacity : {str:int | str}, default is Undefined, optional
        capacity represents the actual resources of the underlying volume.
    conditions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateStatusConditionsItems0], default is Undefined, optional
        conditions is the current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
    phase : str, default is Undefined, optional
        phase represents the current phase of PersistentVolumeClaim.
    resizeStatus : str, default is Undefined, optional
        resizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.
    """


    accessModes?: [str]

    allocatedResources?: {str:int | str}

    capacity?: {str:int | str}

    conditions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateStatusConditionsItems0]

    phase?: str

    resizeStatus?: str


    check:
        all _, n in allocatedResources { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if allocatedResources
        all _, n in capacity { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if capacity


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecStorageVolumeClaimTemplateStatusConditionsItems0:
    """
    PersistentVolumeClaimCondition contains details about state of pvc

    Attributes
    ----------
    lastProbeTime : str, default is Undefined, optional
        lastProbeTime is the time we probed the condition.
    lastTransitionTime : str, default is Undefined, optional
        lastTransitionTime is the time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        message is the human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        reason is a unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
    status : str, default is Undefined, required
        status
    $type : str, default is Undefined, required
        PersistentVolumeClaimConditionType is a valid value of PersistentVolumeClaimCondition.Type
    """


    lastProbeTime?: str

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecTolerationsItems0:
    """
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0:
    """
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    matchLabelKeys : [str], default is Undefined, optional
        MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector. MatchLabelKeys cannot be set when LabelSelector isn't set. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector. 
         This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
    minDomains : int, default is Undefined, optional
        MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule. 
         For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew. 
         This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
    nodeAffinityPolicy : str, default is Undefined, optional
        NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations. 
         If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    nodeTaintsPolicy : str, default is Undefined, optional
        NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included. 
         If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology. And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology. It's a required field.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location, but giving higher precedence to topologies that would help reduce the skew. A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """


    labelSelector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0LabelSelector

    matchLabelKeys?: [str]

    maxSkew: int

    minDomains?: int

    nodeAffinityPolicy?: str

    nodeTaintsPolicy?: str

    topologyKey: str

    whenUnsatisfiable: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0LabelSelector:
    """
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumeMountsItems0:
    """
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0:
    """
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    awsElasticBlockStore : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AwsElasticBlockStore, default is Undefined, optional
        aws elastic block store
    azureDisk : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AzureDisk, default is Undefined, optional
        azure disk
    azureFile : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AzureFile, default is Undefined, optional
        azure file
    cephfs : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Cephfs, default is Undefined, optional
        cephfs
    cinder : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Cinder, default is Undefined, optional
        cinder
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ConfigMap, default is Undefined, optional
        config map
    csi : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Csi, default is Undefined, optional
        csi
    downwardAPI : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    emptyDir : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    ephemeral : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Ephemeral, default is Undefined, optional
        ephemeral
    fc : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Fc, default is Undefined, optional
        fc
    flexVolume : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0FlexVolume, default is Undefined, optional
        flex volume
    flocker : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Flocker, default is Undefined, optional
        flocker
    gcePersistentDisk : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0GcePersistentDisk, default is Undefined, optional
        gce persistent disk
    gitRepo : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0GitRepo, default is Undefined, optional
        git repo
    glusterfs : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Glusterfs, default is Undefined, optional
        glusterfs
    hostPath : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0HostPath, default is Undefined, optional
        host path
    iscsi : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Iscsi, default is Undefined, optional
        iscsi
    name : str, default is Undefined, required
        name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    nfs : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Nfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    photonPersistentDisk : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PhotonPersistentDisk, default is Undefined, optional
        photon persistent disk
    portworxVolume : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PortworxVolume, default is Undefined, optional
        portworx volume
    projected : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Projected, default is Undefined, optional
        projected
    quobyte : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Quobyte, default is Undefined, optional
        quobyte
    rbd : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Rbd, default is Undefined, optional
        rbd
    scaleIO : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ScaleIO, default is Undefined, optional
        scale i o
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Secret, default is Undefined, optional
        secret
    storageos : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Storageos, default is Undefined, optional
        storageos
    vsphereVolume : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0VsphereVolume, default is Undefined, optional
        vsphere volume
    """


    awsElasticBlockStore?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AwsElasticBlockStore

    azureDisk?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AzureDisk

    azureFile?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AzureFile

    cephfs?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Cephfs

    cinder?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Cinder

    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ConfigMap

    csi?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Csi

    downwardAPI?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPI

    emptyDir?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EmptyDir

    ephemeral?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Ephemeral

    fc?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Fc

    flexVolume?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0FlexVolume

    flocker?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Flocker

    gcePersistentDisk?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0GcePersistentDisk

    gitRepo?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0GitRepo

    glusterfs?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Glusterfs

    hostPath?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0HostPath

    iscsi?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Iscsi

    name: str

    nfs?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Nfs

    persistentVolumeClaim?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PersistentVolumeClaim

    photonPersistentDisk?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PhotonPersistentDisk

    portworxVolume?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PortworxVolume

    projected?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Projected

    quobyte?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Quobyte

    rbd?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Rbd

    scaleIO?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ScaleIO

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Secret

    storageos?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Storageos

    vsphereVolume?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0VsphereVolume


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AwsElasticBlockStore:
    """
    awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
    readOnly : bool, default is Undefined, optional
        readOnly value true will force the readOnly setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    volumeID : str, default is Undefined, required
        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    """


    fsType?: str

    partition?: int

    readOnly?: bool

    volumeID: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AzureDisk:
    """
    azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.

    Attributes
    ----------
    cachingMode : str, default is Undefined, optional
        cachingMode is the Host Caching mode: None, Read Only, Read Write.
    diskName : str, default is Undefined, required
        diskName is the Name of the data disk in the blob storage
    diskURI : str, default is Undefined, required
        diskURI is the URI of data disk in the blob storage
    fsType : str, default is Undefined, optional
        fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    kind : str, default is Undefined, optional
        kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    """


    cachingMode?: str

    diskName: str

    diskURI: str

    fsType?: str

    kind?: str

    readOnly?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0AzureFile:
    """
    azureFile represents an Azure File Service mount on the host and bind mount to the pod.

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretName : str, default is Undefined, required
        secretName is the  name of secret that contains Azure Storage Account Name and Key
    shareName : str, default is Undefined, required
        shareName is the azure share Name
    """


    readOnly?: bool

    secretName: str

    shareName: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Cephfs:
    """
    cephFS represents a Ceph FS mount on the host that shares a pod's lifetime

    Attributes
    ----------
    monitors : [str], default is Undefined, required
        monitors is Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path : str, default is Undefined, optional
        path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretFile : str, default is Undefined, optional
        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CephfsSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    """


    monitors: [str]

    path?: str

    readOnly?: bool

    secretFile?: str

    secretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CephfsSecretRef

    user?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CephfsSecretRef:
    """
    secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Cinder:
    """
    cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CinderSecretRef, default is Undefined, optional
        secret ref
    volumeID : str, default is Undefined, required
        volumeID used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    """


    fsType?: str

    readOnly?: bool

    secretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CinderSecretRef

    volumeID: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CinderSecretRef:
    """
    secretRef is optional: points to a secret object containing parameters used to connect to OpenStack.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ConfigMap:
    """
    configMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Csi:
    """
    csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        fsType to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
    nodePublishSecretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        readOnly specifies a read-only configuration for the volume. Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        volumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0CsiNodePublishSecretRef:
    """
    nodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPI:
    """
    downwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of downward API volume file
    """


    defaultMode?: int

    items?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EmptyDir:
    """
    emptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        medium represents what type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        sizeLimit is the total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        regex.match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Ephemeral:
    """
    ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. 
     Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through a PersistentVolumeClaim (see EphemeralVolumeSource for more information on the connection between this volume type and PersistentVolumeClaim). 
     Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. 
     Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. 
     A pod can use both types of ephemeral volumes and persistent volumes at the same time.

    Attributes
    ----------
    volumeClaimTemplate : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplate, default is Undefined, optional
        volume claim template
    """


    volumeClaimTemplate?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplate


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplate:
    """
    Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). 
     An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. 
     This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. 
     Required, must not be nil.

    Attributes
    ----------
    metadata : any, default is Undefined, optional
        May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
    spec : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpec, default is Undefined, required
        spec
    """


    metadata?: any

    spec: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpec


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpec:
    """
    The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.

    Attributes
    ----------
    accessModes : [str], default is Undefined, optional
        accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    dataSource : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource, default is Undefined, optional
        data source
    dataSourceRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef, default is Undefined, optional
        data source ref
    resources : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources, default is Undefined, optional
        resources
    selector : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector, default is Undefined, optional
        selector
    storageClassName : str, default is Undefined, optional
        storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
    volumeMode : str, default is Undefined, optional
        volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
    volumeName : str, default is Undefined, optional
        volumeName is the binding reference to the PersistentVolume backing this claim.
    """


    accessModes?: [str]

    dataSource?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource

    dataSourceRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef

    resources?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources

    selector?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector

    storageClassName?: str

    volumeMode?: str

    volumeName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSource:
    """
    dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecDataSourceRef:
    """
    dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While dataSource ignores disallowed values (dropping them), dataSourceRef preserves all values, and generates an error if a disallowed value is specified. * While dataSource only allows local objects, dataSourceRef allows objects in any namespaces. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    namespace : str, default is Undefined, optional
        Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
    """


    apiGroup?: str

    kind: str

    name: str

    namespace?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResources:
    """
    resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources

    Attributes
    ----------
    claims : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0], default is Undefined, optional
        Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. 
         This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. 
         This field is immutable. It can only be set for containers.
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    """


    claims?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0]

    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, n in limits { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if limits
        all _, n in requests { regex.match(str(n), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") } if requests


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecResourcesClaimsItems0:
    """
    ResourceClaim references one entry in PodSpec.ResourceClaims.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
    """


    name: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelector:
    """
    selector is a label query over volumes to consider for binding.

    Attributes
    ----------
    matchExpressions : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0EphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Fc:
    """
    fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
    lun : int, default is Undefined, optional
        lun is Optional: FC target lun number
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    targetWWNs : [str], default is Undefined, optional
        targetWWNs is Optional: FC target worldwide names (WWNs)
    wwids : [str], default is Undefined, optional
        wwids Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    """


    fsType?: str

    lun?: int

    readOnly?: bool

    targetWWNs?: [str]

    wwids?: [str]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0FlexVolume:
    """
    flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.

    Attributes
    ----------
    driver : str, default is Undefined, required
        driver is the name of the driver to use for this volume.
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
    options : {str:str}, default is Undefined, optional
        options is Optional: this field holds extra command options if any.
    readOnly : bool, default is Undefined, optional
        readOnly is Optional: defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0FlexVolumeSecretRef, default is Undefined, optional
        secret ref
    """


    driver: str

    fsType?: str

    options?: {str:str}

    readOnly?: bool

    secretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0FlexVolumeSecretRef


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0FlexVolumeSecretRef:
    """
    secretRef is Optional: secretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Flocker:
    """
    flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running

    Attributes
    ----------
    datasetName : str, default is Undefined, optional
        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
    datasetUUID : str, default is Undefined, optional
        datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
    """


    datasetName?: str

    datasetUUID?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0GcePersistentDisk:
    """
    gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
    partition : int, default is Undefined, optional
        partition is the partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    pdName : str, default is Undefined, required
        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    """


    fsType?: str

    partition?: int

    pdName: str

    readOnly?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0GitRepo:
    """
    gitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.

    Attributes
    ----------
    directory : str, default is Undefined, optional
        directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
    repository : str, default is Undefined, required
        repository is the URL
    revision : str, default is Undefined, optional
        revision is the commit hash for the specified revision.
    """


    directory?: str

    repository: str

    revision?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Glusterfs:
    """
    glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md

    Attributes
    ----------
    endpoints : str, default is Undefined, required
        endpoints is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    path : str, default is Undefined, required
        path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    """


    endpoints: str

    path: str

    readOnly?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0HostPath:
    """
    hostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.

    Attributes
    ----------
    path : str, default is Undefined, required
        path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    $type : str, default is Undefined, optional
        type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    """


    path: str

    $type?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Iscsi:
    """
    iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md

    Attributes
    ----------
    chapAuthDiscovery : bool, default is Undefined, optional
        chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
    chapAuthSession : bool, default is Undefined, optional
        chapAuthSession defines whether support iSCSI Session CHAP authentication
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
    initiatorName : str, default is Undefined, optional
        initiatorName is the custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
    iqn : str, default is Undefined, required
        iqn is the target iSCSI Qualified Name.
    iscsiInterface : str, default is Undefined, optional
        iscsiInterface is the interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
    lun : int, default is Undefined, required
        lun represents iSCSI Target Lun number.
    portals : [str], default is Undefined, optional
        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0IscsiSecretRef, default is Undefined, optional
        secret ref
    targetPortal : str, default is Undefined, required
        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    """


    chapAuthDiscovery?: bool

    chapAuthSession?: bool

    fsType?: str

    initiatorName?: str

    iqn: str

    iscsiInterface?: str

    lun: int

    portals?: [str]

    readOnly?: bool

    secretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0IscsiSecretRef

    targetPortal: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0IscsiSecretRef:
    """
    secretRef is the CHAP Secret for iSCSI target and initiator authentication

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Nfs:
    """
    nfs represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs

    Attributes
    ----------
    path : str, default is Undefined, required
        path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    readOnly : bool, default is Undefined, optional
        readOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    server : str, default is Undefined, required
        server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    """


    path: str

    readOnly?: bool

    server: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PersistentVolumeClaim:
    """
    persistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    claimName : str, default is Undefined, required
        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        readOnly Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    readOnly?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PhotonPersistentDisk:
    """
    photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    pdID : str, default is Undefined, required
        pdID is the ID that identifies Photon Controller persistent disk
    """


    fsType?: str

    pdID: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0PortworxVolume:
    """
    portworxVolume represents a portworx volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    volumeID : str, default is Undefined, required
        volumeID uniquely identifies a Portworx volume
    """


    fsType?: str

    readOnly?: bool

    volumeID: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Projected:
    """
    projected items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    sources : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0], default is Undefined, optional
        sources is the list of volume projections
    """


    defaultMode?: int

    sources?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0:
    """
    Projection that may be projected along with other supported volume types

    Attributes
    ----------
    configMap : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    configMap?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPI

    secret?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ConfigMap:
    """
    configMap information about the configMap data to project

    Attributes
    ----------
    items : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional specify whether the ConfigMap or its keys must be defined
    """


    items?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPI:
    """
    downwardAPI information about the downwardAPI data to project

    Attributes
    ----------
    items : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    """
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    """
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    """
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        regex.match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0Secret:
    """
    secret information about the secret data to project

    Attributes
    ----------
    items : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        items if unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its key must be defined
    """


    items?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str

    optional?: bool


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    """
    serviceAccountToken is information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        expirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
    path : str, default is Undefined, required
        path is the path relative to the mount point of the file to project the token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Quobyte:
    """
    quobyte represents a Quobyte mount on the host that shares a pod's lifetime

    Attributes
    ----------
    group : str, default is Undefined, optional
        group to map volume access to Default is no group
    readOnly : bool, default is Undefined, optional
        readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
    registry : str, default is Undefined, required
        registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
    tenant : str, default is Undefined, optional
        tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
    user : str, default is Undefined, optional
        user to map volume access to Defaults to serivceaccount user
    volume : str, default is Undefined, required
        volume is a string that references an already created Quobyte volume by name.
    """


    group?: str

    readOnly?: bool

    registry: str

    tenant?: str

    user?: str

    volume: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Rbd:
    """
    rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
    image : str, default is Undefined, required
        image is the rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    keyring : str, default is Undefined, optional
        keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    monitors : [str], default is Undefined, required
        monitors is a collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    pool : str, default is Undefined, optional
        pool is the rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    readOnly : bool, default is Undefined, optional
        readOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0RbdSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        user is the rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    """


    fsType?: str

    image: str

    keyring?: str

    monitors: [str]

    pool?: str

    readOnly?: bool

    secretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0RbdSecretRef

    user?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0RbdSecretRef:
    """
    secretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ScaleIO:
    """
    scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
    gateway : str, default is Undefined, required
        gateway is the host address of the ScaleIO API Gateway.
    protectionDomain : str, default is Undefined, optional
        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
    readOnly : bool, default is Undefined, optional
        readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ScaleIOSecretRef, default is Undefined, required
        secret ref
    sslEnabled : bool, default is Undefined, optional
        sslEnabled Flag enable/disable SSL communication with Gateway, default false
    storageMode : str, default is Undefined, optional
        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
    storagePool : str, default is Undefined, optional
        storagePool is the ScaleIO Storage Pool associated with the protection domain.
    system : str, default is Undefined, required
        system is the name of the storage system as configured in ScaleIO.
    volumeName : str, default is Undefined, optional
        volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
    """


    fsType?: str

    gateway: str

    protectionDomain?: str

    readOnly?: bool

    secretRef: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ScaleIOSecretRef

    sslEnabled?: bool

    storageMode?: str

    storagePool?: str

    system: str

    volumeName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0ScaleIOSecretRef:
    """
    secretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Secret:
    """
    secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        defaultMode is Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0SecretItemsItems0], default is Undefined, optional
        items If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    optional : bool, default is Undefined, optional
        optional field specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        secretName is the name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0SecretItemsItems0:
    """
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the key to project.
    mode : int, default is Undefined, optional
        mode is Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        path is the relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0Storageos:
    """
    storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0StorageosSecretRef, default is Undefined, optional
        secret ref
    volumeName : str, default is Undefined, optional
        volumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
    volumeNamespace : str, default is Undefined, optional
        volumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
    """


    fsType?: str

    readOnly?: bool

    secretRef?: MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0StorageosSecretRef

    volumeName?: str

    volumeNamespace?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0StorageosSecretRef:
    """
    secretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema MonitoringGrafanaComV1alpha1GrafanaAgentSpecVolumesItems0VsphereVolume:
    """
    vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    storagePolicyID : str, default is Undefined, optional
        storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storagePolicyName : str, default is Undefined, optional
        storagePolicyName is the storage Policy Based Management (SPBM) profile name.
    volumePath : str, default is Undefined, required
        volumePath is the path that identifies vSphere volume vmdk
    """


    fsType?: str

    storagePolicyID?: str

    storagePolicyName?: str

    volumePath: str


