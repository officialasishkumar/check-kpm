"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1


schema Probe:
    """
    Probe defines monitoring for a set of static targets or ingresses.

    Attributes
    ----------
    apiVersion : str, default is "monitoring.coreos.com/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Probe", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCoreosComV1ProbeSpec, default is Undefined, required
        spec
    """


    apiVersion: "monitoring.coreos.com/v1" = "monitoring.coreos.com/v1"

    kind: "Probe" = "Probe"

    metadata?: v1.ObjectMeta

    spec: MonitoringCoreosComV1ProbeSpec


schema MonitoringCoreosComV1ProbeSpec:
    """
    Specification of desired Ingress selection for target discovery by Prometheus.

    Attributes
    ----------
    authorization : MonitoringCoreosComV1ProbeSpecAuthorization, default is Undefined, optional
        authorization
    basicAuth : MonitoringCoreosComV1ProbeSpecBasicAuth, default is Undefined, optional
        basic auth
    bearerTokenSecret : MonitoringCoreosComV1ProbeSpecBearerTokenSecret, default is Undefined, optional
        bearer token secret
    interval : str, default is Undefined, optional
        Interval at which targets are probed using the configured prober. If not specified Prometheus' global scrape interval is used.
    jobName : str, default is Undefined, optional
        The job name assigned to scraped metrics by default.
    labelLimit : int, default is Undefined, optional
        Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    labelNameLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    labelValueLengthLimit : int, default is Undefined, optional
        Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    metricRelabelings : [MonitoringCoreosComV1ProbeSpecMetricRelabelingsItems0], default is Undefined, optional
        MetricRelabelConfigs to apply to samples before ingestion.
    module : str, default is Undefined, optional
        The module to use for probing specifying how to probe the target. Example module configuring in the blackbox exporter: https://github.com/prometheus/blackbox_exporter/blob/master/example.yml
    oauth2 : MonitoringCoreosComV1ProbeSpecOauth2, default is Undefined, optional
        oauth2
    prober : MonitoringCoreosComV1ProbeSpecProber, default is Undefined, optional
        prober
    sampleLimit : int, default is Undefined, optional
        SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
    scrapeTimeout : str, default is Undefined, optional
        Timeout for scraping metrics from the Prometheus exporter. If not specified, the Prometheus global scrape timeout is used.
    targetLimit : int, default is Undefined, optional
        TargetLimit defines a limit on the number of scraped targets that will be accepted.
    targets : MonitoringCoreosComV1ProbeSpecTargets, default is Undefined, optional
        targets
    tlsConfig : MonitoringCoreosComV1ProbeSpecTLSConfig, default is Undefined, optional
        tls config
    """


    authorization?: MonitoringCoreosComV1ProbeSpecAuthorization

    basicAuth?: MonitoringCoreosComV1ProbeSpecBasicAuth

    bearerTokenSecret?: MonitoringCoreosComV1ProbeSpecBearerTokenSecret

    interval?: str

    jobName?: str

    labelLimit?: int

    labelNameLengthLimit?: int

    labelValueLengthLimit?: int

    metricRelabelings?: [MonitoringCoreosComV1ProbeSpecMetricRelabelingsItems0]

    module?: str

    oauth2?: MonitoringCoreosComV1ProbeSpecOauth2

    prober?: MonitoringCoreosComV1ProbeSpecProber

    sampleLimit?: int

    scrapeTimeout?: str

    targetLimit?: int

    targets?: MonitoringCoreosComV1ProbeSpecTargets

    tlsConfig?: MonitoringCoreosComV1ProbeSpecTLSConfig


    check:
        regex.match(str(interval), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if interval
        regex.match(str(scrapeTimeout), r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeTimeout


schema MonitoringCoreosComV1ProbeSpecAuthorization:
    """
    Authorization section for this endpoint

    Attributes
    ----------
    credentials : MonitoringCoreosComV1ProbeSpecAuthorizationCredentials, default is Undefined, optional
        credentials
    $type : str, default is Undefined, optional
        Set the authentication type. Defaults to Bearer, Basic will cause an error
    """


    credentials?: MonitoringCoreosComV1ProbeSpecAuthorizationCredentials

    $type?: str


schema MonitoringCoreosComV1ProbeSpecAuthorizationCredentials:
    """
    The secret's key that contains the credentials of the request

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecBasicAuth:
    """
    BasicAuth allow an endpoint to authenticate over basic authentication. More info: https://prometheus.io/docs/operating/configuration/#endpoint

    Attributes
    ----------
    password : MonitoringCoreosComV1ProbeSpecBasicAuthPassword, default is Undefined, optional
        password
    username : MonitoringCoreosComV1ProbeSpecBasicAuthUsername, default is Undefined, optional
        username
    """


    password?: MonitoringCoreosComV1ProbeSpecBasicAuthPassword

    username?: MonitoringCoreosComV1ProbeSpecBasicAuthUsername


schema MonitoringCoreosComV1ProbeSpecBasicAuthPassword:
    """
    The secret in the service monitor namespace that contains the password for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecBasicAuthUsername:
    """
    The secret in the service monitor namespace that contains the username for authentication.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecBearerTokenSecret:
    """
    Secret to mount to read bearer token for scraping targets. The secret needs to be in the same namespace as the probe and accessible by the Prometheus Operator.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecMetricRelabelingsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on regex matching. Default is 'replace'. uppercase and lowercase actions require Prometheus >= 2.36.
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex.match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringCoreosComV1ProbeSpecOauth2:
    """
    OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.

    Attributes
    ----------
    clientId : MonitoringCoreosComV1ProbeSpecOauth2ClientID, default is Undefined, required
        client Id
    clientSecret : MonitoringCoreosComV1ProbeSpecOauth2ClientSecret, default is Undefined, required
        client secret
    endpointParams : {str:str}, default is Undefined, optional
        Parameters to append to the token URL
    scopes : [str], default is Undefined, optional
        OAuth2 scopes used for the token request
    tokenUrl : str, default is Undefined, required
        The URL to fetch the token from
    """


    clientId: MonitoringCoreosComV1ProbeSpecOauth2ClientID

    clientSecret: MonitoringCoreosComV1ProbeSpecOauth2ClientSecret

    endpointParams?: {str:str}

    scopes?: [str]

    tokenUrl: str


    check:
        len(tokenUrl) >= 1


schema MonitoringCoreosComV1ProbeSpecOauth2ClientID:
    """
    The secret or configmap containing the OAuth2 client id

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ProbeSpecOauth2ClientIDConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ProbeSpecOauth2ClientIDSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1ProbeSpecOauth2ClientIDConfigMap

    secret?: MonitoringCoreosComV1ProbeSpecOauth2ClientIDSecret


schema MonitoringCoreosComV1ProbeSpecOauth2ClientIDConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecOauth2ClientIDSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecOauth2ClientSecret:
    """
    The secret containing the OAuth2 client secret

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecProber:
    """
    Specification for the prober to use for probing targets. The prober.URL parameter is required. Targets cannot be probed if left empty.

    Attributes
    ----------
    path : str, default is "/probe", optional
        Path to collect metrics from. Defaults to `/probe`.
    proxyUrl : str, default is Undefined, optional
        Optional ProxyURL.
    scheme : str, default is Undefined, optional
        HTTP scheme to use for scraping. `http` and `https` are the expected values unless you rewrite the `__scheme__` label via relabeling. If empty, Prometheus uses the default value `http`.
    url : str, default is Undefined, required
        Mandatory URL of the prober.
    """


    path?: str = "/probe"

    proxyUrl?: str

    scheme?: "http" | "https"

    url: str


schema MonitoringCoreosComV1ProbeSpecTLSConfig:
    """
    TLS configuration to use when scraping the endpoint.

    Attributes
    ----------
    ca : MonitoringCoreosComV1ProbeSpecTLSConfigCa, default is Undefined, optional
        ca
    cert : MonitoringCoreosComV1ProbeSpecTLSConfigCert, default is Undefined, optional
        cert
    insecureSkipVerify : bool, default is Undefined, optional
        Disable target certificate validation.
    keySecret : MonitoringCoreosComV1ProbeSpecTLSConfigKeySecret, default is Undefined, optional
        key secret
    serverName : str, default is Undefined, optional
        Used to verify the hostname for the targets.
    """


    ca?: MonitoringCoreosComV1ProbeSpecTLSConfigCa

    cert?: MonitoringCoreosComV1ProbeSpecTLSConfigCert

    insecureSkipVerify?: bool

    keySecret?: MonitoringCoreosComV1ProbeSpecTLSConfigKeySecret

    serverName?: str


schema MonitoringCoreosComV1ProbeSpecTLSConfigCa:
    """
    Certificate authority used when verifying server certificates.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ProbeSpecTLSConfigCaConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ProbeSpecTLSConfigCaSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1ProbeSpecTLSConfigCaConfigMap

    secret?: MonitoringCoreosComV1ProbeSpecTLSConfigCaSecret


schema MonitoringCoreosComV1ProbeSpecTLSConfigCaConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTLSConfigCaSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTLSConfigCert:
    """
    Client certificate to present when doing client-authentication.

    Attributes
    ----------
    configMap : MonitoringCoreosComV1ProbeSpecTLSConfigCertConfigMap, default is Undefined, optional
        config map
    secret : MonitoringCoreosComV1ProbeSpecTLSConfigCertSecret, default is Undefined, optional
        secret
    """


    configMap?: MonitoringCoreosComV1ProbeSpecTLSConfigCertConfigMap

    secret?: MonitoringCoreosComV1ProbeSpecTLSConfigCertSecret


schema MonitoringCoreosComV1ProbeSpecTLSConfigCertConfigMap:
    """
    ConfigMap containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTLSConfigCertSecret:
    """
    Secret containing data to use for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTLSConfigKeySecret:
    """
    Secret containing the client key file for the targets.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema MonitoringCoreosComV1ProbeSpecTargets:
    """
    Targets defines a set of static or dynamically discovered targets to probe.

    Attributes
    ----------
    ingress : MonitoringCoreosComV1ProbeSpecTargetsIngress, default is Undefined, optional
        ingress
    staticConfig : MonitoringCoreosComV1ProbeSpecTargetsStaticConfig, default is Undefined, optional
        static config
    """


    ingress?: MonitoringCoreosComV1ProbeSpecTargetsIngress

    staticConfig?: MonitoringCoreosComV1ProbeSpecTargetsStaticConfig


schema MonitoringCoreosComV1ProbeSpecTargetsIngress:
    """
    ingress defines the Ingress objects to probe and the relabeling configuration. If `staticConfig` is also defined, `staticConfig` takes precedence.

    Attributes
    ----------
    namespaceSelector : MonitoringCoreosComV1ProbeSpecTargetsIngressNamespaceSelector, default is Undefined, optional
        namespace selector
    relabelingConfigs : [MonitoringCoreosComV1ProbeSpecTargetsIngressRelabelingConfigsItems0], default is Undefined, optional
        RelabelConfigs to apply to the label set of the target before it gets scraped. The original ingress address is available via the `__tmp_prometheus_ingress_address` label. It can be used to customize the probed URL. The original scrape job's name is available via the `__tmp_prometheus_job_name` label. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    selector : MonitoringCoreosComV1ProbeSpecTargetsIngressSelector, default is Undefined, optional
        selector
    """


    namespaceSelector?: MonitoringCoreosComV1ProbeSpecTargetsIngressNamespaceSelector

    relabelingConfigs?: [MonitoringCoreosComV1ProbeSpecTargetsIngressRelabelingConfigsItems0]

    selector?: MonitoringCoreosComV1ProbeSpecTargetsIngressSelector


schema MonitoringCoreosComV1ProbeSpecTargetsIngressNamespaceSelector:
    """
    From which namespaces to select Ingress objects.

    Attributes
    ----------
    any : bool, default is Undefined, optional
        Boolean describing whether all namespaces are selected in contrast to a list restricting them.
    matchNames : [str], default is Undefined, optional
        List of namespace names to select from.
    """


    any?: bool

    matchNames?: [str]


schema MonitoringCoreosComV1ProbeSpecTargetsIngressRelabelingConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on regex matching. Default is 'replace'. uppercase and lowercase actions require Prometheus >= 2.36.
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex.match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


schema MonitoringCoreosComV1ProbeSpecTargetsIngressSelector:
    """
    Selector to select the Ingress objects.

    Attributes
    ----------
    matchExpressions : [MonitoringCoreosComV1ProbeSpecTargetsIngressSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [MonitoringCoreosComV1ProbeSpecTargetsIngressSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema MonitoringCoreosComV1ProbeSpecTargetsIngressSelectorMatchExpressionsItems0:
    """
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema MonitoringCoreosComV1ProbeSpecTargetsStaticConfig:
    """
    staticConfig defines the static list of targets to probe and the relabeling configuration. If `ingress` is also defined, `staticConfig` takes precedence. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Labels assigned to all metrics scraped from the targets.
    relabelingConfigs : [MonitoringCoreosComV1ProbeSpecTargetsStaticConfigRelabelingConfigsItems0], default is Undefined, optional
        RelabelConfigs to apply to the label set of the targets before it gets scraped. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
    static : [str], default is Undefined, optional
        The list of hosts to probe.
    """


    labels?: {str:str}

    relabelingConfigs?: [MonitoringCoreosComV1ProbeSpecTargetsStaticConfigRelabelingConfigsItems0]

    static?: [str]


schema MonitoringCoreosComV1ProbeSpecTargetsStaticConfigRelabelingConfigsItems0:
    """
    RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion. It defines `<metric_relabel_configs>`-section of Prometheus configuration. More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs

    Attributes
    ----------
    action : str, default is "replace", optional
        Action to perform based on regex matching. Default is 'replace'. uppercase and lowercase actions require Prometheus >= 2.36.
    modulus : int, default is Undefined, optional
        Modulus to take of the hash of the source label values.
    regex : str, default is Undefined, optional
        Regular expression against which the extracted value is matched. Default is '(.*)'
    replacement : str, default is Undefined, optional
        Replacement value against which a regex replace is performed if the regular expression matches. Regex capture groups are available. Default is '$1'
    separator : str, default is Undefined, optional
        Separator placed between concatenated source label values. default is ';'.
    sourceLabels : [str], default is Undefined, optional
        The source labels select values from existing labels. Their content is concatenated using the configured separator and matched against the configured regular expression for the replace, keep, and drop actions.
    targetLabel : str, default is Undefined, optional
        Label to which the resulting value is written in a replace action. It is mandatory for replace actions. Regex capture groups are available.
    """


    action?: "replace" | "Replace" | "keep" | "Keep" | "drop" | "Drop" | "hashmod" | "HashMod" | "labelmap" | "LabelMap" | "labeldrop" | "LabelDrop" | "labelkeep" | "LabelKeep" | "lowercase" | "Lowercase" | "uppercase" | "Uppercase" | "keepequal" | "KeepEqual" | "dropequal" | "DropEqual" = "replace"

    modulus?: int

    regex?: str

    replacement?: str

    separator?: str

    sourceLabels?: [str]

    targetLabel?: str


    check:
        all n in sourceLabels { regex.match(str(n), r"^[a-zA-Z_][a-zA-Z0-9_]*$") } if sourceLabels


